La empresa Ideas Argentinas S.A. posee datos de sus empleados en dos secuencias de caracteres; la primera secuencia
(Sec1) formada por los nombres (uno por persona) de los empleados separados por blancos y la segunda secuencia (Sec2)
posee los números de documento de cada uno de los empleados (palabras de 8 dígitos numéricos). Ambas secuencias poseen
la misma cantidad de datos, es decir al primer nombre de la primera secuencia le corresponde el primer número de documento
 de la segunda secuencia y así sucesivamente. La secuencia de números de documentos no posee espacios en blanco ni ningún
  otro tipo de caracter que separe un número de documento de otro.
A la empresa le interesa tener en una nueva secuencia (Sec3) los datos de todas aquellas personas que cumplan la condición
 de que el nombre se encuentre en una posición impar. La nueva secuencia debe generarse de la siguiente manera: el número
  de documento seguido (sin espacios) por una coma y luego (sin espacios) por el nombre y seguido al nombre un #.

Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la
Sec3 son los de aquellas personas que cumplan la condición de que: el número de documento comienza con un número impar.

ACCION .. ES
    AMBIENTE
        sec1, sec2, sal: secuencia de caracter
        num, nombs: caracter
        cont, i: entero

        FUNCION ConvaENTERO(x: caracter): entero ES
            SEGUN x HACER
                "0": ConvaENTERO := 0
                "1": ConvaENTERO := 1
                "2": ConvaENTERO := 2
                "3": ConvaENTERO := 3
                "4": ConvaENTERO := 4
                "5": ConvaENTERO := 5
                "6": ConvaENTERO := 6
                "7": ConvaENTERO := 7
                "8": ConvaENTERO := 8
                "9": ConvaENTERO := 9
            FIN_SEGUN
        FIN_FUNCION
    PROCESO
        ARR(sec1)
        AVZ(sec1, nombs)
        ARR(sec2)
        AVZ(sec2, num)

        CREAR(sal)

        cont:= 0
        MIENTRAS NFDS(sec1) y NFDS(sec2) HACER
            MIENTRAS nombs = "" HACER
                AVZ(sec1, nombs)
            FIN_MIENTRAS

            cont:= cont + 1
            SI ConvaENTERO(num) mod 2 = 1 ENTONCES
                PARA i:= 1 HASTA 8 HACER
                    ESC(sal, num)
                    AVZ(sec2, num) //en la iteracion 8 termino en el primer numero del sig documento
                FIN_PARA
                ESC(sal, ",")

                MIENTRAS nombs <> "" HACER
                    ESC(sal, nombs)
                    AVZ(sec1, nombs)
                FIN_MIENTRAS
                ESC(sal, "#")
            SINO
                PARA i:= 1 HASTA 8 HACER
                    AVZ(sec2, num) //acá avanzo 8 veces hasta llegar al primer numero del sig documento
                FIN_PARA

                MIENTRAS nombs <> "" HACER
                    AVZ(sec1, nombs)
                FIN_MIENTRAS
            FIN_SI
        FIN_MIENTRAS

        CERRAR(sec1)
        CERRAR(sec2)
        CERRAR(sal)
FIN_PROCESO

// otra versión más corta (sin crear funcion convertidora de caracter a entero)

ACCION .. ES
    AMBIENTE
        IMPARES = ("1", "3", "5", "7", "9") //funciona sin poner todos los numeros impares infinitos porque solo preguntamos digito por digito no por más de un digito
        PARES = ("0", "2", "4", "6", "8") //esto es en realidad innecesario porque está puesto por si hay otros caracteres en la secuencia, pero hay solo numeros
        sec1, sec2, sal: secuencia de caracter
        num, nombs: caracter
        cont, i: entero

    PROCESO
        ARR(sec1)
        AVZ(sec1, nombs)
        ARR(sec2)
        AVZ(sec2, num)

        CREAR(sal)

        cont:= 0
        MIENTRAS NFDS(sec1) y NFDS(sec2) HACER
            MIENTRAS nombs = "" HACER
                AVZ(sec1, nombs)
            FIN_MIENTRAS

            cont:= cont + 1
            SI num EN IMPARES ENTONCES
                PARA i:= 1 HASTA 8 HACER
                    ESC(sal, num)
                    AVZ(sec2, num) //en la iteracion 8 termino en el primer numero del sig documento
                FIN_PARA
                ESC(sal, ",")

                MIENTRAS nombs <> "" HACER
                    ESC(sal, nombs)
                    AVZ(sec1, nombs)
                FIN_MIENTRAS
                ESC(sal, "#")
            SINO
                PARA i:= 1 HASTA 8 HACER
                    AVZ(sec2, num) //acá avanzo 8 veces hasta llegar al primer numero del sig documento
                FIN_PARA

                MIENTRAS nombs <> "" HACER
                    AVZ(sec1, nombs)
                FIN_MIENTRAS
            FIN_SI
        FIN_MIENTRAS

        CERRAR(sec1)
        CERRAR(sec2)
        CERRAR(sal)
FIN_PROCESO